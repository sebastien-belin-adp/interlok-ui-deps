<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.adaptris.ui</groupId>
  <artifactId>interlok</artifactId>
  <!-- This is intentional
       mvn deploy will deploy a fully normalized pom file
  -->
  <version>${ui.version}</version>
  <packaging>war</packaging>
  <name>Interlok UI</name>
  <url>http://www.adaptris.com</url>
  <organization>
    <name>Adaptris Ltd</name>
    <url>http://www.adaptris.com</url>
  </organization>
  <properties>
    <ui.version>3.10-SNAPSHOT</ui.version>
    <adapter.version>${ui.version}</adapter.version>
    <!-- This is to force the "test" scope to use the snapshot version so that
        we remove timing issues from the release build :(
    -->
    <adapter.test.scope.version>3.10-SNAPSHOT</adapter.test.scope.version>
    <spring.version>4.3.22.RELEASE</spring.version>
    <xstream.version>1.4.11.1</xstream.version>
    <derby.version>10.14.2.0</derby.version>
    <hibernate.version>5.4.10.Final</hibernate.version>
    <hibernate.validator.version>6.0.17.Final</hibernate.validator.version>
    <validation-api.version>2.0.1.Final</validation-api.version>
    <c3p0.version>0.9.5.4</c3p0.version>
    <shiro.version>1.4.2</shiro.version>
    <jackson.version>2.10.2</jackson.version>
    <jackson-databind.version>2.10.2</jackson-databind.version>
    <jetty.version>9.4.24.v20191120</jetty.version>
    <jersey.version>2.30</jersey.version>
    <swagger.version>1.5.24</swagger.version>
    <slf4j.version>1.7.30</slf4j.version>
    <bouncycastle.version>1.61</bouncycastle.version>
    <activemq.version>5.15.11</activemq.version>
    <quartz.version>2.3.2</quartz.version>
    <xerces.version>2.12.0</xerces.version>
    <jettison.version>1.2</jettison.version>
    <environment>dev</environment>
    <skipTests>false</skipTests>
    <skip.purge>true</skip.purge>
    <skip.owasp>false</skip.owasp>
    <encoding>UTF-8</encoding>

    <!-- Change this if you want to "compile" if you want to build a WAR file that can run outside of an adapter -->
    <adapter.library.scope>provided</adapter.library.scope>
    <!-- Use maven updatePolicy options: always, daily (default), interval:X (where X is an integer in minutes) or never. -->
    <updatePolicy.snapshot>daily</updatePolicy.snapshot>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
    <dependency.locations.enabled>false</dependency.locations.enabled>
    <jacoco.exec.path>${project.build.directory}/coverage-reports/jacoco.exec</jacoco.exec.path>
    <snapshot.repo.url>https://nexus.adaptris.net/nexus/content/repositories/snapshots</snapshot.repo.url>
    <release.repo.url>https://nexus.adaptris.net/nexus/content/repositories/releases</release.repo.url>
    <public.repo.url>https://nexus.adaptris.net/nexus/content/groups/public</public.repo.url>
    <private.repo.url>https://nexus.adaptris.net/nexus/content/groups/private</private.repo.url>
    <isRelease>false</isRelease>
  </properties>
  <prerequisites>
    <maven>3.1.1</maven>
  </prerequisites>
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <environment>dev</environment>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <environment>test</environment>
        <skipTests>false</skipTests>
      </properties>
    </profile>
    <profile>
      <id>hudson</id>
      <properties>
        <environment>hudson</environment>
        <skipTests>false</skipTests>
        <updatePolicy.snapshot>always</updatePolicy.snapshot>
        <skip.purge>false</skip.purge>
        <skip.owasp>true</skip.owasp>
      </properties>
    </profile>
    <profile>
      <id>nightly</id>
      <properties>
        <environment>nightly</environment>
        <skipTests>true</skipTests>
        <skip.purge>false</skip.purge>
        <skip.owasp>true</skip.owasp>
        <adaptris.remote.repo.id>adaptris-snapshots</adaptris.remote.repo.id>
        <adaptris.remote.repo.url>${snapshot.repo.url}</adaptris.remote.repo.url>
        <isRelease>false</isRelease>
      </properties>
    </profile>
    <profile>
      <id>release</id>
      <properties>
        <environment>release</environment>
        <skipTests>true</skipTests>
        <skip.purge>false</skip.purge>
        <adaptris.remote.repo.id>adaptris-releases</adaptris.remote.repo.id>
        <adaptris.remote.repo.url>${release.repo.url}</adaptris.remote.repo.url>
        <isRelease>true</isRelease>
        <skip.owasp>true</skip.owasp>
      </properties>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.7</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1.1</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>3.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- Dom4j for Hibernate, We can remove it as well as the exclusions when hibernate is upgraded to 5.3.7-Final -->
    <dependency>
      <groupId>org.dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>2.1.1</version>
    </dependency>
    <!-- Hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
      <exclusions>
        <exclusion>
          <groupId>dom4j</groupId>
          <artifactId>dom4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>
      <exclusions>
        <exclusion>
          <groupId>dom4j</groupId>
          <artifactId>dom4j</artifactId>
        </exclusion>
        <!--
        <exclusion>
        <groupId>javassist</groupId>
        <artifactId>javassist</artifactId>
        </exclusion>
        -->
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <version>1.0.0.Final</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate.validator.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.el</artifactId>
      <version>3.0.1-b11</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <version>${hibernate.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.mchange</groupId>
          <artifactId>c3p0</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <!-- Adapter dependencies -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
      <version>${activemq.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>${adapter.library.scope}</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>${adapter.library.scope}</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>${adapter.library.scope}</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-ext</artifactId>
      <version>${slf4j.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>${adapter.library.scope}</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${derby.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>2.7.0</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <version>2.4</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-core-apt</artifactId>
      <version>${adapter.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-logging</artifactId>
      <version>${adapter.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-core</artifactId>
      <version>${adapter.version}</version>
      <scope>${adapter.library.scope}</scope>
      <exclusions>
        <!-- Need to exclude this to keep maven jetty:run working -->
        <exclusion>
          <groupId>org.apache.activemq</groupId>
          <artifactId>activemq-all</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.management</groupId>
          <artifactId>jmxremote</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.management</groupId>
          <artifactId>jmxremote-optional</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty.aggregate</groupId>
          <artifactId>jetty-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-socket</artifactId>
      <version>${adapter.test.scope.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-service-tester</artifactId>
      <version>${adapter.test.scope.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-varsub</artifactId>
      <version>${adapter.test.scope.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>${bouncycastle.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>${bouncycastle.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcmail-jdk15on</artifactId>
      <version>${bouncycastle.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-ext-jdk15on</artifactId>
      <version>${bouncycastle.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.9</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.6</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.3</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.4</version>
    </dependency>
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
      <version>${c3p0.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <version>2.0.8</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <version>0.1.55</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.joost</groupId>
      <artifactId>joost</artifactId>
      <version>0.9.1</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${quartz.version}</version>
      <scope>${adapter.library.scope}</scope>
      <exclusions>
        <exclusion>
          <groupId>com.mchange</groupId>
          <artifactId>c3p0</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.zaxxer</groupId>
          <artifactId>HikariCP-java7</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>9.8.0-15</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>${xerces.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-servlet_3.0_spec</artifactId>
      <version>1.0</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>${jettison.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.5.6</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>${xstream.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
    	<groupId>org.jvnet.opendmk</groupId>
    	<artifactId>jmxremote_optional</artifactId>
    	<version>1.0_01-ea</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <!-- Jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!-- Jersey -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-spring4</artifactId>
      <version>${jersey.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>bean-validator</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-sse</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-http</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Shiro -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>${shiro.version}</version>
      <exclusions>
      	<!-- We do that for Snyk as the jstl jar is never used anyway -->
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--     We disable the shiro cache for now as it can cause some conflict with the hibernate cache. -->
    <!--     <dependency> -->
    <!--       <groupId>org.apache.shiro</groupId> -->
    <!--       <artifactId>shiro-ehcache</artifactId> -->
    <!--       <version>${shiro.version}</version> -->
    <!--     </dependency> -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${shiro.version}</version>
      <exclusions>
      	<!-- We do that for Snyk as the jstl jar is never used anyway -->
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Misc -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>28.2-jre</version>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>6.0.4</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-core</artifactId>
      <version>${swagger.version}</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
      <version>${swagger.version}</version>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-ui-swagger-codegen</artifactId>
      <version>2.4.9</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.9.1</version>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-profiler</artifactId>
      <version>${adapter.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>com.adaptris</groupId>
      <artifactId>interlok-monitor-agent</artifactId>
      <version>${adapter.version}</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.4</version>
      <scope>${adapter.library.scope}</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>Adaptris-public</id>
      <url>${public.repo.url}</url>
      <snapshots>
        <updatePolicy>${updatePolicy.snapshot}</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>Adaptris-private</id>
      <url>${private.repo.url}</url>
      <snapshots>
        <updatePolicy>${updatePolicy.snapshot}</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>adaptris-snapshots</id>
      <url>${snapshot.repo.url}</url>
      <snapshots>
        <updatePolicy>${updatePolicy.snapshot}</updatePolicy>
      </snapshots>
    </repository>
  </repositories>
  <distributionManagement>
    <repository>
      <id>adaptris-releases</id>
      <url>${release.repo.url}</url>
      <layout>default</layout>
      <uniqueVersion>false</uniqueVersion>
    </repository>
    <snapshotRepository>
      <id>adaptris-snapshots</id>
      <url>${snapshot.repo.url}</url>
      <layout>default</layout>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>
  <pluginRepositories>
    <pluginRepository>
      <id>Adaptris-public</id>
      <url>${public.repo.url}</url>
      <snapshots>
        <updatePolicy>${updatePolicy.snapshot}</updatePolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>Adaptris-private</id>
      <url>${private.repo.url}</url>
      <snapshots>
        <updatePolicy>${updatePolicy.snapshot}</updatePolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>Adaptris-snapshots</id>
      <url>${snapshot.repo.url}</url>
      <snapshots>
        <updatePolicy>${updatePolicy.snapshot}</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <finalName>${project.artifactId}</finalName>
    <filters>
      <filter>${basedir}/src/main/filters/${environment}.filter.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/webapp/WEB-INF</directory>
        <filtering>true</filtering>
        <targetPath>../jettyFilteredResources</targetPath>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>webdefault.xml</exclude>
          <exclude>META-INF/context.xml</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <!-- Should not be filtered -->
          <exclude>docs/jars/interlok-core-TEST-javadoc.jar</exclude>
          <exclude>docs/jars/interlok-core-TEST-javadoc.no-package-list.jar</exclude>
          <exclude>docs/jars/interlok-core-TEST-javadoc.jar</exclude>
          <exclude>project-action/project-xinclude.zip</exclude>
          <exclude>zip-test/zip-test-folder-corrupted.zip</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <!-- Should not be filtered -->
          <include>docs/jars/interlok-core-TEST-javadoc.jar</include>
          <include>docs/jars/interlok-core-TEST-javadoc.no-package-list.jar</include>
          <include>project-action/project-xinclude.zip</include>
          <include>zip-test/zip-test-folder-corrupted.zip</include>
        </includes>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>replace-pom-placeholder</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${basedir}</directory>
                  <includes>
                    <include>pom.xml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}/pom-install-deploy-fix</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
        <executions>
          <execution>
            <id>default-install</id>
            <phase>never</phase>
          </execution>
          <execution>
            <id>do-install</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.build.directory}/${project.build.finalName}.war</file>
              <pomFile>${project.build.directory}/pom-install-deploy-fix/pom.xml</pomFile>
              <version>${project.version}</version>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>never</phase>
          </execution>
          <execution>
            <id>do-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy-file</goal>
            </goals>
            <configuration>
              <file>${project.build.directory}/${project.build.finalName}.war</file>
              <pomFile>${project.build.directory}/pom-install-deploy-fix/pom.xml</pomFile>
              <url>${adaptris.remote.repo.url}</url>
              <repositoryId>${adaptris.remote.repo.id}</repositoryId>
              <version>${project.version}</version>
              <updateReleaseInfo>${isRelease}</updateReleaseInfo>
              <uniqueVersion>false</uniqueVersion>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>purge-local-dependencies</id>
            <phase>clean</phase>
            <goals>
              <goal>purge-local-repository</goal>
            </goals>
            <configuration>
              <skip>${skip.purge}</skip>
              <actTransitively>true</actTransitively>
              <reResolve>false</reResolve>
              <verbose>true</verbose>
              <snapshotsOnly>true</snapshotsOnly>
              <resolutionFuzziness>groupId</resolutionFuzziness>
              <manualIncludes>
                <manualInclude>com.adaptris</manualInclude>
              </manualIncludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
      <plugin>
      	<groupId>com.adaptris.maven</groupId>
      	<artifactId>fingerprint-maven-plugin</artifactId>
      	<version>1.0</version>
      	<executions>
	      <execution>
            <id>default-fingerprint</id>
	        <!-- Use the prepare-package phase to not process the files when we run the tests -->
	        <phase>prepare-package</phase>
			<!-- <phase>package</phase> -->
	        <goals>
	          <goal>generate</goal>
	        </goals>
	        </execution>
	    </executions>
	    <configuration>
          <excludeResources>
            <excludeResource>://</excludeResource>
            <excludeResource>//</excludeResource>
            <excludeResource>data:</excludeResource>
            <excludeResource>/js/libs</excludeResource>
            <excludeResource>'+uriContent+'</excludeResource>
          </excludeResources>
          <sourceDirectory> ${basedir}/src/main/webapp/h5</sourceDirectory>
          <targetDirectory>${project.build.directory}/h5-fingerprinted</targetDirectory>
          <includes>
            <include>**/*.html</include>
            <include>**/*.css</include>
            <include>**/*.js</include>
          </includes>
          <excludes>
            <exclude>js/libs/**</exclude>
          </excludes>
	    </configuration>
      </plugin>
      <plugin>
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <version>1.7.6</version>
        <executions>
          <execution>
            <id>default-minify</id>
            <!-- Use the prepare-package phase to not process the files when we run the tests -->
            <phase>prepare-package</phase>
            <configuration>
              <charset>${encoding}</charset>
              <nosuffix>true</nosuffix>
              <skipMerge>true</skipMerge>
              <webappSourceDir>${project.build.directory}</webappSourceDir>
              <webappTargetDir>${project.build.directory}</webappTargetDir>
              <!-- Use the fingerprinted css and minify them -->
              <cssSourceDir>h5-fingerprinted</cssSourceDir>
              <cssTargetDir>h5-minified</cssTargetDir>
              <cssSourceIncludes>
                <cssSourceInclude>account/*.css</cssSourceInclude>
                <cssSourceInclude>alerts/*.css</cssSourceInclude>
                <cssSourceInclude>component-search/*.css</cssSourceInclude>
                <cssSourceInclude>config/*.css</cssSourceInclude>
                <cssSourceInclude>dashboard/*.css</cssSourceInclude>
                <cssSourceInclude>errors/*.css</cssSourceInclude>
                <cssSourceInclude>index/*.css</cssSourceInclude>
                <cssSourceInclude>log-config/*.css</cssSourceInclude>
                <cssSourceInclude>logging/*.css</cssSourceInclude>
                <cssSourceInclude>optional/*.css</cssSourceInclude>
                <cssSourceInclude>runtime/*.css</cssSourceInclude>
                <cssSourceInclude>salesforce/*.css</cssSourceInclude>
                <cssSourceInclude>service-tester/*.css</cssSourceInclude>
                <cssSourceInclude>system-preference/*.css</cssSourceInclude>
                <cssSourceInclude>user/*.css</cssSourceInclude>
                <cssSourceInclude>vcs-profile/*.css</cssSourceInclude>
                <cssSourceInclude>css/common.css</cssSourceInclude>
                <cssSourceInclude>css/widget.css</cssSourceInclude>
                <cssSourceInclude>css/login.css</cssSourceInclude>
              </cssSourceIncludes>
              <!-- Use the fingerprinted js and minify them -->
              <jsSourceDir>h5-fingerprinted</jsSourceDir>
              <jsTargetDir>h5-minified</jsTargetDir>
              <jsSourceIncludes>
                <jsSourceInclude>account/*.js</jsSourceInclude>
                <jsSourceInclude>alerts/*.js</jsSourceInclude>
                <jsSourceInclude>component-search/*.js</jsSourceInclude>
                <jsSourceInclude>config/*.js</jsSourceInclude>
                <jsSourceInclude>dashboard/*.js</jsSourceInclude>
                <jsSourceInclude>index/*.js</jsSourceInclude>
                <jsSourceInclude>log-config/*.js</jsSourceInclude>
                <jsSourceInclude>logging/*.js</jsSourceInclude>
                <jsSourceInclude>optional/*.js</jsSourceInclude>
                <jsSourceInclude>runtime/*.js</jsSourceInclude>
                <jsSourceInclude>salesforce/*.js</jsSourceInclude>
                <jsSourceInclude>service-tester/*.js</jsSourceInclude>
                <jsSourceInclude>system-preference/*.js</jsSourceInclude>
                <jsSourceInclude>user/*.js</jsSourceInclude>
                <jsSourceInclude>vcs-profile/*.js</jsSourceInclude>
                <jsSourceInclude>js/*.js</jsSourceInclude>
                <jsSourceInclude>js/libs/properties-parser.js</jsSourceInclude>
                <jsSourceInclude>js/libs/rgbcolor.js</jsSourceInclude>
                <jsSourceInclude>js/libs/bootstrap/bootstrap-select-modified.js</jsSourceInclude>
                <jsSourceInclude>js/knockout/*.js</jsSourceInclude>
              </jsSourceIncludes>
            </configuration>
            <goals>
              <goal>minify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.3</version>
        <configuration>
          <filters>
            <filter>${basedir}/src/main/filters/${environment}.filter.properties</filter>
          </filters>
          <webResources>
            <resource>
              <directory>src/main/webapp/WEB-INF</directory>
              <targetPath>WEB-INF</targetPath>
              <includes>
                <!--<include>applicationContext.xml</include> -->
                <include>jetty-env.xml</include>
                <include>web.xml</include>
              </includes>
              <filtering>true</filtering>
            </resource>
            <!-- Copy the fingerprinted minified resources to the h5 dir -->
		   	<resource>
		      <directory>${project.build.directory}/h5-minified</directory>
		      <targetPath>/</targetPath>
		      <filtering>false</filtering>
		    </resource>
            <!-- Copy the fingerprinted resources to the h5 dir -->
		   	<resource>
		      <directory>${project.build.directory}/h5-fingerprinted</directory>
		      <targetPath>/</targetPath>
              <excludes>
	            <!-- We use modified versions so we don't want these one -->
                <exclude>js/libs/raphael.pan-zoom.js</exclude>
                <exclude>js/libs/justgage.original.js</exclude>
                <exclude>js/libs/koExternalTemplateEngine_all.js</exclude>
                <exclude>js/libs/bootstrap/bootstrap-select.js</exclude>
                <exclude>js/libs/bootstrap/bootstrap-tokenfield.js</exclude>
	            <!-- We use the minified version so we don't want this one -->
                <exclude>js/libs/bootstrap/bootstrap.js</exclude>
              </excludes>
		      <filtering>false</filtering>
		    </resource>
            <resource>
              <directory>src/main/resources/META-INF</directory>
              <targetPath>META-INF</targetPath>
              <includes>
                <include>context.xml</include>
              </includes>
              <filtering>true</filtering>
            </resource>
          </webResources>
          <warSourceExcludes>
          	h5/**
          	<!--
            h5/account/*.js,h5/account/*.css,
            h5/alerts/*.js,h5/alerts/*.css,
            h5/config/*.js,h5/config/*.css,
            h5/dashboard/*.js,h5/dashboard/*.css,
            h5/errors/*.css,
            h5/logging/*.js,h5/logging/*.css,
            h5/optional/*.js,h5/optional/*.css,
            h5/runtime/*.js,h5/runtime/*.css,
            h5/system-preference/*.js,h5/system-preference/*.css,
            h5/user/*.js,h5/user/*.css,
            h5/vcs-profile/*.js,h5/vcs-profile/*.css,
            h5/js/*.js,h5/js/knockout/*.js,
            h5/js/libs/properties-parser.js,
            h5/js/libs/rgbcolor.js,
            h5/js/libs/bootstrap/bootstrap-select-modified.js,
            h5/css/common.css,h5/css/widget.css,h5/css/login.css
          	 -->
          </warSourceExcludes>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-core</artifactId>
            <version>${adapter.version}</version>
            <exclusions>
              <exclusion>
                <groupId>org.eclipse.jetty.aggregate</groupId>
                <artifactId>jetty-all</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
          </dependency>
          <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
          </dependency>
          <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derby.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
          </dependency>
          <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <version>${activemq.version}</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.7.0</version>
          </dependency>
          <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-core-apt</artifactId>
            <version>${adapter.version}</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-logging</artifactId>
            <version>${adapter.version}</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-socket</artifactId>
            <version>${adapter.version}</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-service-tester</artifactId>
            <version>${adapter.version}</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-varsub</artifactId>
            <version>${adapter.version}</version>
          </dependency>
          <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
          </dependency>
          <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
          </dependency>
          <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcmail-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
          </dependency>
          <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-ext-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
          </dependency>
          <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
          </dependency>
          <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
          </dependency>
          <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
          </dependency>
          <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.6</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>1.3</version>
          </dependency>
          <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0.version}</version>
          </dependency>
          <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
            <version>2.0.8</version>
          </dependency>
          <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.55</version>
          </dependency>
          <dependency>
            <groupId>net.sf.joost</groupId>
            <artifactId>joost</artifactId>
            <version>0.9.1</version>
          </dependency>
          <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
            <exclusions>
              <exclusion>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
              </exclusion>
              <exclusion>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP-java7</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.8.0-15</version>
          </dependency>
          <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>${xerces.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>${jettison.version}</version>
          </dependency>
          <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.5.6</version>
          </dependency>
          <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${xstream.version}</version>
          </dependency>
          <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
          </dependency>
          <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
          </dependency>
          <dependency>
	        <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>3.0.1-b11</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-profiler</artifactId>
            <version>${adapter.version}</version>
          </dependency>
          <dependency>
            <groupId>com.adaptris</groupId>
            <artifactId>interlok-monitor-agent</artifactId>
            <version>${adapter.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <webApp>
            <contextPath>/${project.artifactId}</contextPath>
            <defaultsDescriptor>src/main/resources/webdefault.xml</defaultsDescriptor>
            <descriptor>${project.build.directory}/jettyFilteredResources/web.xml</descriptor>
            <jettyEnvXml>${project.build.directory}/jettyFilteredResources/jetty-env.xml</jettyEnvXml>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <resourcesAsCSV>src/main/webapp/h5</resourcesAsCSV>
            </baseResource>
          </webApp>
          <stopKey>foo</stopKey>
          <stopPort>9999</stopPort>
          <httpConnector>
            <port>8082</port>
          </httpConnector>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <!-- Skips unit tests if the value of skipTests property is true -->
          <skipTests>${skipTests}</skipTests>
          <!-- Sets the VM argument line used when unit tests are run -->
          <argLine>${surefireArgLine}</argLine>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.klieber</groupId>
        <artifactId>phantomjs-maven-plugin</artifactId>
        <version>0.7</version>
        <executions>
          <execution>
            <id>phantomjs</id>
            <phase>test</phase>
            <goals>
              <goal>install</goal>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- PhantomJS version -->
          <version>2.1.1</version>
          <checkSystemPath>false</checkSystemPath>
          <skip>${skipTests}</skip>
          <!-- Qunit PhantomJs Runner -->
          <script>${basedir}/src/test/webapp/h5/js/libs/runner.js</script>
          <arguments>
            <!-- Qunit Javascript test suite -->
            <argument>file:///${basedir}/src/test/webapp/h5/adp-qunit-testsuite.html</argument>
            <!-- Timeout for asynch tests -->
            <argument>30</argument>
          </arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.3</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${jacoco.exec.path}</destFile>
              <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${jacoco.exec.path}</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.8.2</version>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>5.2.1</version>
        <configuration>
          <skip>${skip.owasp}</skip>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <failOnError>false</failOnError>
          <additionalparam>-Xdoclint:none</additionalparam>
          <additionalJOptions>-html5</additionalJOptions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.12.0</version>
        <configuration>
          <linkXref>true</linkXref>
          <sourceEncoding>${encoding}</sourceEncoding>
          <targetJdk>1.8</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>3.1.12.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <goal>report-only</goal>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.3</version>
        <configuration>
          <!-- Sets the path to the file which contains the execution data. -->
          <destFile>${jacoco.exec.path}</destFile>
          <dataFile>${jacoco.exec.path}</dataFile>
          <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
          <propertyName>surefireArgLine</propertyName>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>5.2.1</version>
        <configuration>
          <skip>${skip.owasp}</skip>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
